div{
	display: block; /*Override The Default Display Value*/
	overflow: auto; /*The auto value is similar to scroll, only it add scrollbars when necessary*/
}


div.myheader{
	width: 100%;
	position: fixed;
	left: 0%;
	top: 0px;
	right: 0%;
	border: 3px solid black;
	text-align: center;
	background-color: tomato;
	color: white;
	z-index: 10;
}

div.con1{
	position: relative;
	max-width: 1000px;
	border: 3px solid black;
	outline: 3px solid red;
	color: green;
	/*display: none;*/
	/*visibility: hidden;*/		
}

div.con2{
	position: absolute;
	left: 30px;
	width: 900px;
	margin: auto;
	border: 3px solid black;
	color: red;
}

div.con3{
	position: -webkit-sticky;
  	position: sticky;
  	top: 0;
  	padding: 5px;
  	background-color: #cae8ca;
  	border: 2px solid #4CAF50;
}

/*
The position property specifies the type of positioning method used for an element.

There are four different position values:

		1. static or normal position
		(HTML elements are positioned static by default. Static positioned
		elements are not affected by the top, bottom, left, and right properties. 
		An element with position: static; is not positioned in any special way;
		it is always positioned according to the normal flow of the page.)
		
		2. relative
		(An element with position: relative; is positioned relative to its "normal position".
		Setting the top, right, bottom, and left properties of a relatively-positioned 
		element will cause it to be adjusted away from its normal position. Other content
		will not be adjusted to fit into any gap left by the element.)
		
		3. fixed
		(An element with position: fixed; is positioned relative to the viewport, 
		which means it always stays in the same place even if the page is scrolled. 
		The top, right, bottom, and left properties are used to position the element.)
		
		4. absolute
		(An element with position: absolute; is positioned relative to the nearest
		 positioned "ancestor" (instead of positioned relative to the viewport, like fixed).
		 However; if an absolute positioned element has no positioned ancestors, 
		 it uses the document body, and moves along with page scrolling.)

		5. sticky
		An element with position: sticky; is positioned based on the user's scroll position.
		A sticky element toggles between relative and fixed, depending on the scroll position.
		It is positioned relative until a given offset position is met in the viewport - then
		it "sticks" in place (like position:fixed).

*/
